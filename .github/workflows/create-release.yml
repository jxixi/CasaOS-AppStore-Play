name: Create Release

permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

 

      - name: Filter and Create Release
        id: create_release
        run: |
          # Build universal
          zip AppStore.zip $(find . -type f \( -wholename "./*.json" -o -wholename "./Apps/*.yml" \))
          # Build arm
          [ -d "./Apps_arm" ] && cp -rfu ./Apps_arm/*   ./Apps/
          zip AppStore_arm.zip   $(find . -type f -wholename "./*.json" && find . -type f -wholename "./Apps/*.yml" -exec grep -rlPz 'x-casaos:\s*\n\s*architectures:[\n\s\w-]*- arm\s*\n' {} \;)
          git checkout -- ./Apps && git clean -df ./Apps
          # Build arm64
          [ -d "./Apps_arm64" ] && cp -rfu ./Apps_arm64/* ./Apps/
          zip AppStore_arm64.zip $(find . -type f -wholename "./*.json" && find . -type f -wholename "./Apps/*.yml" -exec grep -rlPz 'x-casaos:\s*\n\s*architectures:[\n\s\w-]*- arm64\s*\n' {} \;)
          git checkout -- ./Apps && git clean -df ./Apps
          # Build amd64
          [ -d "./Apps_amd64" ] && cp -rfu ./Apps_amd64/* ./Apps/
          zip AppStore_amd64.zip $(find . -type f -wholename "./*.json" && find . -type f -wholename "./Apps/*.yml" -exec grep -rlPz 'x-casaos:\s*\n\s*architectures:[\n\s\w-]*- amd64\s*\n' {} \;)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload New Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            AppStore.zip
            AppStore_arm.zip
            AppStore_arm64.zip
            AppStore_amd64.zip
          tag_name: new
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
